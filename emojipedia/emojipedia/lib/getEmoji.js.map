{"version":3,"sources":["../src/getEmoji.ts"],"sourcesContent":["import { gql, request } from \"graphql-request\";\n\nimport { getEmojipediaSlug } from \"./getEmojipediaSlug.js\";\nimport { EmojiV1TechnicalInformation } from \"./types.js\";\n\nexport type RetrievedEmoji = RetrievedEmojiMissing | RetrievedEmojiSuccess;\n\nexport interface RetrievedEmojiBase {\n\tslug: string;\n}\n\nexport interface RetrievedEmojiMissing extends RetrievedEmojiBase {\n\tfound: false;\n}\n\nexport interface RetrievedEmojiSuccess extends RetrievedEmojiBase {\n\tfound: true;\n\tinfo: EmojiV1TechnicalInformation;\n}\n\nexport async function getEmoji(slug: string): Promise<RetrievedEmoji> {\n\ttry {\n\t\tconst emojipediaSlug = getEmojipediaSlug(slug);\n\t\treturn {\n\t\t\tfound: true,\n\t\t\tinfo: await getTechnicalInformation(emojipediaSlug),\n\t\t\tslug: emojipediaSlug,\n\t\t};\n\t} catch {\n\t\treturn {\n\t\t\tfound: false,\n\t\t\tslug,\n\t\t};\n\t}\n}\n\ninterface ResponseData {\n\temoji_v1: EmojiV1TechnicalInformation;\n}\n\nasync function getTechnicalInformation(slug: string) {\n\tconst response = await request<ResponseData>(\n\t\t\"https://emojipedia.org/api/graphql\",\n\t\tgql`\n\t\t\tquery ($slug: Slug!, $lang: Language) {\n\t\t\t\temoji_v1(slug: $slug, lang: $lang) {\n\t\t\t\t\t...emojiDetailsResource\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfragment shortCodeResource on Shortcode {\n\t\t\t\tcode\n\t\t\t\tvendor {\n\t\t\t\t\tslug\n\t\t\t\t\ttitle\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfragment emojiResource on Emoji {\n\t\t\t\talsoKnownAs\n\t\t\t\tappleName\n\t\t\t\tcode\n\t\t\t\tcodepointsHex\n\t\t\t\tcurrentCldrName\n\t\t\t\tdescription\n\t\t\t\tid\n\t\t\t\tmodifiers\n\t\t\t\tslug\n\t\t\t\tshortcodes {\n\t\t\t\t\t...shortCodeResource\n\t\t\t\t}\n\t\t\t\ttitle\n\t\t\t}\n\n\t\t\tfragment emojiDetailsResource on Emoji {\n\t\t\t\t...emojiResource\n\t\t\t\tcomponents {\n\t\t\t\t\t...emojiResource\n\t\t\t\t}\n\t\t\t\temojiVersion {\n\t\t\t\t\tdate\n\t\t\t\t\tname\n\t\t\t\t\tslug\n\t\t\t\t\tstatus\n\t\t\t\t}\n\t\t\t\tshortcodes {\n\t\t\t\t\tcode\n\t\t\t\t\tsource\n\t\t\t\t\tvendor {\n\t\t\t\t\t\tslug\n\t\t\t\t\t\ttitle\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttype\n\t\t\t\tversion {\n\t\t\t\t\tdate\n\t\t\t\t\tdescription\n\t\t\t\t\tname\n\t\t\t\t\tslug\n\t\t\t\t\tstatus\n\t\t\t\t}\n\t\t\t}\n\t\t`,\n\t\t{ lang: \"EN\", slug },\n\t);\n\n\treturn response.emoji_v1;\n}\n"],"mappings":"AAAA,SAAS,KAAK,eAAe;AAE7B,SAAS,yBAAyB;AAkBlC,eAAsB,SAAS,MAAuC;AACrE,MAAI;AACH,UAAM,iBAAiB,kBAAkB,IAAI;AAC7C,WAAO;AAAA,MACN,OAAO;AAAA,MACP,MAAM,MAAM,wBAAwB,cAAc;AAAA,MAClD,MAAM;AAAA,IACP;AAAA,EACD,QAAQ;AACP,WAAO;AAAA,MACN,OAAO;AAAA,MACP;AAAA,IACD;AAAA,EACD;AACD;AAMA,eAAe,wBAAwB,MAAc;AACpD,QAAM,WAAW,MAAM;AAAA,IACtB;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA4DA,EAAE,MAAM,MAAM,KAAK;AAAA,EACpB;AAEA,SAAO,SAAS;AACjB;","names":[]}